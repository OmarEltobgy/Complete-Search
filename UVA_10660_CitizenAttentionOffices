#include <stdio.h>
static int city[30][3];
static int min, n;
static int places[5];
static int bestPlaces[5];
int mod(int X)
{
  if(X >= 0)
		return X;
	else
		return (-1*X);
}
int check()
{
	int i, j, minDistance, k, r, c, distance, minTotalDistance;
	minTotalDistance = 0;
	for(i=0; i<n; i++)
	{
		minDistance = 1<<30;
		for(k=0; k<5; k++)
		{
			distance = mod(places[k]/5-city[i][0]) + mod(places[k]%5-city[i][1]);
			if(distance < minDistance)
				minDistance = distance;
		}
		minTotalDistance += minDistance*city[i][2];
		if(minTotalDistance >= min)
			return minTotalDistance;
	}
	return minTotalDistance;
}
void solve(int now, int NTaken)
{
	int i, temp;
	if(NTaken == 5)
	{
		temp = check();
		if(temp < min)
		{
			min = temp;
			for(i=0; i<5; i++)
				bestPlaces[i] = places[i];
		}
		return;
	}
	for(i=now; i<25; i++)
	{
		places[NTaken] = i;
		solve(i+1, NTaken+1);
	}
}
int main()
{
	int t, T, i;
	scanf("%d",&t);
	for(T=0; T<t; T++)
	{
		scanf("%d",&n);
		for(i=0; i<n; i++)
			scanf("%d%d%d",&city[i][0],&city[i][1],&city[i][2]);
		min = 1<<30;
		solve(0 ,0);
		for(i=0; i<4; i++)
			printf("%d ",bestPlaces[i]);
		printf("%d\n",bestPlaces[i]);	
	}
	return 0;
}
